#!/bin/bash
#
# Temporary utility to add compiled xbmc.apk to system/app
# Matricom
#

OUT_TARGET_HOST=`uname -a | grep Darwin`
QUIET=-q
if [ -z "$OUT_TARGET_HOST" ]
then
OUT_TARGET_HOST=linux-x86
   MD5=md5sum
   XARGS="xargs --max-args=1 --max-procs `grep 'processor' /proc/cpuinfo|wc -l`"
   SED=sed
else
OUT_TARGET_HOST=darwin-x86
   MD5="md5 -r "
   XARGS="xargs -n 1 -P `sysctl hw.ncpu | awk '{print $2}'`"
   SED=gsed
fi

if [ ! -z $OUT_DIR_COMMON_BASE ]; then
TREE_NAME=`basename $ANDROID_BUILD_TOP`
OUT_DIR=$OUT_DIR_COMMON_BASE/$TREE_NAME
else
OUT_DIR=$ANDROID_BUILD_TOP/out
fi

# manipulate TARGET_PRODUCT to give us just device
DEVICE=${TARGET_PRODUCT##*_}

FIRMWARE_REVISION=`cat ${OUT_DIR}/target/product/${DEVICE}/system/build.prop | grep ro.matricom.firmware.version | cut -f2 -d "="`
if [ ! -z $VENDOR_OVERLAY ]; then
   PRODUCT=${VENDOR_OVERLAY}_${DEVICE}
else
   PRODUCT=${TARGET_PRODUCT}
fi
OTAPACKAGE=${OUT_DIR}/target/product/${DEVICE}/${PRODUCT}_${FIRMWARE_REVISION}.zip

REPACK=$OUT/repack.d
echo -e "Sanitizing environment..."
rm -rf $REPACK
mkdir -p $REPACK
echo -e

# Unpack the otapackage
mkdir $REPACK/ota
(
cd $REPACK/ota
echo -e "Unpacking $OTAPACKAGE..."
unzip $QUIET $OTAPACKAGE
echo -e
)

BUILD_TIMESTAMP=`sed -n -e'/ro.build.date.utc/s/^.*=//p' $REPACK/ota/system/build.prop`

echo -e "Zipping package..."
( cd $REPACK/ota; zip $QUIET -r $REPACK/update.zip . )
echo -e
echo -e "Signing package..."
SECURITYDIR=$ANDROID_BUILD_TOP/build/target/product/security
java -Xmx1024m \
-jar $OUT_DIR/host/$OUT_TARGET_HOST/framework/signapk.jar \
-w $SECURITYDIR/testkey.x509.pem $SECURITYDIR/testkey.pk8 \
$REPACK/update.zip ${OTAPACKAGE}_rezipped
echo -e
echo -e "Cleaning up..."
rm -rf $REPACK
echo -e

(
ZIPSIZE=`ls -lah $OTAPACKAGE | awk '{ print $5}' `
MD5SUM=`cat $OTAPACKAGE.md5sum | awk '{ print $1 }'`
echo -e "===========-Package complete-==========="
echo -e "zip: $OTAPACKAGE"
echo -e "md5: $MD5SUM"
echo -e "timestamp: $BUILD_TIMESTAMP"
echo -e "size: $ZIPSIZE"
echo -e "========================================"
echo -e
)
