#!/bin/bash

. $ANDROID_BUILD_TOP/vendor/matricom/tools/colors

OUT_TARGET_HOST=`uname -a | grep Darwin`
if [ -z "$OUT_TARGET_HOST" ]
then
   MD5=md5sum
   SED=sed
else
   MD5="md5 -r "
   SED=gsed
fi

# manipulate TARGET_PRODUCT to give us just device
BUILD_PROP=${OUT}/system/build.prop
FIRMWARE_REVISION=`cat ${BUILD_PROP} | grep ro.matricom.firmware.version | cut -f2 -d "="`

OUTFILE=${OUT}/${TARGET_PRODUCT}_${FIRMWARE_REVISION}.zip
ZIPSIZE=`ls -lah ${OUTFILE} | awk '{ print $5}' `

$MD5 ${OUTFILE} >${OUTFILE}.md5sum
# cat all the install info > $OUT/factory_update_params.aml
cat >${OUT}/factory_update_param.aml <<EOL
--show_text
--update_package=/external_sd/${TARGET_PRODUCT}_${FIRMWARE_REVISION}.zip
--run_command=/system/bin/reboot
EOL

echo -e ""
echo -e ${CL_INS}"  Package Complete:"${CL_RST}
echo -e ${CL_MAG}"      ${OUTFILE}"${CL_RST}
echo -e ${CL_INS}"  Package Size:"${CL_RST}
echo -e ${CL_MAG}"       ${ZIPSIZE}"
echo -e ${CL_INS}"  AML Autoscript:"${CL_RST}
echo -e ${CL_MAG}"      ${OUT}/factory_update_param.aml"${CL_RST}
echo -e ${CL_INS}"  MD5:"${CL_RST}
echo -e ${CL_MAG}"      $(cat ${OUTFILE}.md5sum | cut -d " " -f1)"${CL_RST}
echo -e ${CL_INS}"  Timestamp:"${CL_RST}
echo -e ${CL_MAG}"      $(sed -n -e'/ro\.build\.date\.utc/s/^.*=//p' ${BUILD_PROP})"${CL_RST}
echo -e ""

# NOTE: to use this feature, you also need to get the nma.sh
# shell script from http://storage.locked.io/files/nma.sh
# everything else is pretty self explanatory. The api_key
# file *is* in the .gitignore of this repo, so it will not
# be tracked.
if [[ $USE_NMA = true ]]; then
    api_key=`cat $ANDROID_BUILD_TOP/vendor/matricom/tools/api_key`
    priority="0"
    app_name="Matricom Build Notifier"
    event=`date`
    description="${TARGET_PRODUCT} Build complete!"

    notify-my-android \
                    -k "$api_key" \
                    -p "$priority" \
                    -a "$app_name" \
                    -e "$event" \
                    -d "$description"
fi
